"use strict";var WORLD_SIDE_SIZE=7,WINDOW_HEIGHT=window.innerHeight,WINDOW_WIDTH=window.innerWidth,ROAD_COLORS=[16711680,16746496,16776960,65280,65535,255,16711935],NUMBER_COLORS=ROAD_COLORS.length,WORLD_HEIGHT=1e3,WORLD_WIDTH=100,TOP_CAMERA_DIST=50,CAR_SIZE_X=10,CAR_SIZE_Y=10,CAR_SIZE_Z=10,BOX_SIZE=10,NotMarioKart=function(){function e(){var e=io({transports:["websocket"],upgrade:!1});e.on("all-players",function(e){console.log("[all-players]",e),e.forEach(function(e){var o=e.position,n=e.rotation,r=t();d[e.id]={position:o,rotation:n,car:r},r.position.set(o.x,o.y,o.z),r.rotation.set(n.x,n.y,n.z),i.add(r)})}),e.on("player-joined",function(e){toastr.success("player "+e.id+" has joined."),console.log("[player-joined]",e);var o=e.position,n=e.rotation,r=t();d[e.id]={position:o,rotation:n,car:r},r.position.set(o.x,o.y,o.z),r.rotation.set(n.x,n.y,n.z),i.add(r)}),e.on("player-left",function(e){toastr.error("Player "+e+" has left."),console.log("[player-left]",e);var t=d[e].car;i.remove(t),delete d[e]}),e.on("update-player",function(e){console.log("[update-player]",e);var t=e.id,o=e.position,n=e.rotation,r=d[t];r.car.position.set(o.x,o.y,o.z),r.car.rotation.set(n.x,n.y,n.z)}),e.on("start-countdown",function(e){toastr.info(e+" seconds before the race starts."),console.log("[start-countdown]",e)}),e.on("start",function(){toastr.info("The race has started."),console.log("[start]")}),e.on("finished",function(e){toastr.info("You finished."),console.log("[finished]",e)}),e.on("stop",function(e){toaster.info("The race is over."),console.log("[stop]",stop),e.forEach(function(e){e.name})}),window.setInterval(function(){var t=Player.playerObject;e.emit("update-player",{position:{x:t.position.x,y:t.position.y,z:t.position.z},rotation:{x:t.rotation._x,y:t.rotation._y,z:t.rotation._z}})},12.5)}function t(){return(new THREE.ObjectLoader).parse(playerCar)}function o(){var e=new THREE.CatmullRomCurve3([new THREE.Vector3(0,0,0),new THREE.Vector3(0,500,0),new THREE.Vector3(-200,500,0),new THREE.Vector3(-200,800,0),new THREE.Vector3(600,800,0),new THREE.Vector3(600,500,0),new THREE.Vector3(300,500,0),new THREE.Vector3(300,0,0),new THREE.Vector3(800,0,0),new THREE.Vector3(800,-500,0),new THREE.Vector3(0,-500,0)]);e.closed=!0;for(var t={steps:100,extrudePath:e},o=new THREE.Shape([new THREE.Vector2(2*CAR_SIZE_Y,0),new THREE.Vector2(0,5*CAR_SIZE_X),new THREE.Vector2(0,-5*CAR_SIZE_X)]),n=new THREE.ExtrudeGeometry(o,t),r=[],s=0;s<NUMBER_COLORS;s++)r.push(new THREE.MeshBasicMaterial({color:ROAD_COLORS[s],side:THREE.DoubleSide}));for(var l=n.faces.length/2,c=0;c<l;c++){var E=2*c;n.faces[E].materialIndex=(c+Math.floor(c/WORLD_SIDE_SIZE))%NUMBER_COLORS,n.faces[E+1].materialIndex=(c+Math.floor(c/WORLD_SIDE_SIZE))%NUMBER_COLORS}(a=new THREE.Mesh(n,r)).rotateX(-Math.PI/2),a.position.y=0,i.add(a)}function n(){for(var e=0;e<1e3;e++){var t=new Box(Math.floor(4001*Math.random()-2e3),BOX_SIZE/2,Math.floor(4001*Math.random()-2e3));i.updateMatrixWorld(),Physics.gravity(t.mesh,a),t.mesh.position.y==BOX_SIZE/2&&(E.push(t),i.add(t.mesh))}}function r(){requestAnimationFrame(r),s.clear(),s.setViewport(0,0,WINDOW_WIDTH,WINDOW_HEIGHT),s.render(i,Player.getCamera()),l.clear(),l.setViewport(0,0,WINDOW_WIDTH/4,WINDOW_HEIGHT/4),l.render(i,c),Player.doMovementLoop(),Physics.detectCollision(Player.playerObject,E)&&Player.crash(),c.position.z=Player.playerObject.position.z,Physics.gravity(Player.playerObject,a)}var a,i=new THREE.Scene,s=new THREE.WebGLRenderer,l=new THREE.WebGLRenderer,c=new THREE.OrthographicCamera(-WINDOW_WIDTH,WINDOW_WIDTH,WINDOW_HEIGHT,-WINDOW_HEIGHT,TOP_CAMERA_DIST-50,TOP_CAMERA_DIST+50),E=[],d={};return{init:function(){s.setSize(WINDOW_WIDTH,WINDOW_HEIGHT),s.setPixelRatio(window.devicePixelRatio),s.domElement.style.position="fixed",document.body.appendChild(s.domElement),s.autoClear=!1,l.setSize(WINDOW_WIDTH/4,WINDOW_HEIGHT/4),l.setPixelRatio(window.devicePixelRatio),l.domElement.style.position="fixed",l.domElement.style.top="5%",l.domElement.style.left="70%",l.domElement.style.zIndex="2",l.domElement.style.outline="white solid",document.body.appendChild(l.domElement),l.autoClear=!1,c.position.y=TOP_CAMERA_DIST,c.rotation.x=-90*Math.PI/180,o(),n(),i.add(Player.playerObject),e(),r()}}}(),Player=function(){function e(e){e=e||event,d[e.which]="keydown"===e.type}var t=new THREE.PerspectiveCamera(75,WINDOW_WIDTH/WINDOW_HEIGHT,.1,1e3),o=new THREE.PerspectiveCamera(75,WINDOW_WIDTH/WINDOW_HEIGHT,.1,1e3),n=o,r=function(){var e=(new THREE.ObjectLoader).parse(playerCar);return t.position.y=2*e.scale.y,t.position.z=4*e.scale.z,t.rotateY(180*Math.PI/180),o.position.y=10*e.scale.y,o.position.z=-20*e.scale.z,o.rotateY(180*Math.PI/180),e.add(t),e.add(o),e}(),a={movement:{arrows:{up:38,down:40,left:37,right:39},wasd:{up:87,down:83,left:65,right:68}},switchCamera:67,reset:8},i=a.movement.arrows,s=0,l=5,c=.05,E=.05,d={};return document.addEventListener("keydown",e,!1),document.addEventListener("keyup",e,!1),{doMovementLoop:function(){d[i.up]&&s<l&&(s+=c),d[i.left]&&r.rotateY(E),d[i.right]&&r.rotateY(-E),d[i.down]&&s>0&&(s-=c,s=Math.max(0,s)),r.translateZ(s),d[a.switchCamera]&&(n=n===t?o:t,d[a.switchCamera]=!1),d[a.reset]&&(r.rotation.x=0,r.position.set(0,r.position.x,0),r.rotation.y=0,r.position.set(0,r.position.y,0),r.rotation.z=0,r.position.set(0,r.position.z,0))},playerObject:r,getCamera:function(){return n},playerId:null,crash:function(){s=0}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
