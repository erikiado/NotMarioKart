"use strict";var WORLD_SIDE_SIZE=7,WINDOW_HEIGHT=window.innerHeight,WINDOW_WIDTH=window.innerWidth,ROAD_COLORS=[16711680,16746496,16776960,65280,65535,255,16711935],NUMBER_COLORS=ROAD_COLORS.length,WORLD_HEIGHT=1e3,WORLD_WIDTH=100,TOP_CAMERA_DIST=500,CAR_SIZE_X=10,CAR_SIZE_Y=10,CAR_SIZE_Z=10,Player=function(){function e(e){e=e||event,_[e.which]="keydown"===e.type}var t=new THREE.PerspectiveCamera(75,WINDOW_WIDTH/WINDOW_HEIGHT,.1,1e3),o=new THREE.PerspectiveCamera(75,WINDOW_WIDTH/WINDOW_HEIGHT,.1,1e3),n=o,a=function(){var e=(new THREE.TextureLoader).load("/assets/object-textures/player.jpg"),n=new THREE.BoxGeometry(CAR_SIZE_X,CAR_SIZE_Y,CAR_SIZE_Z),a=new THREE.MeshBasicMaterial({map:e}),r=new THREE.Mesh(n,a);return r.position.y=n.parameters.height/2,o.position.y=CAR_SIZE_Y,o.position.z=4*CAR_SIZE_Z,r.add(t),r.add(o),r}(),r={movement:{arrows:{up:38,down:40,left:37,right:39},wasd:{up:87,down:83,left:65,right:68}},switchCamera:67,reset:8},i=r.movement.arrows,E=.5,I=.03,_={};return document.addEventListener("keydown",e,!1),document.addEventListener("keyup",e,!1),{doMovementLoop:function(){_[i.up]&&a.translateZ(-E),_[i.left]&&a.rotateY(I),_[i.right]&&a.rotateY(-I),_[i.down]&&a.translateZ(E),_[r.switchCamera]&&(n=n===t?o:t,_[r.switchCamera]=!1),_[r.reset]&&(a.rotation.y=0,a.position.set(0,a.position.y,0))},playerObject:a,getCamera:function(){return n}}}(),NotMarioKart=function(){function e(){for(var e=new THREE.PlaneGeometry(WORLD_WIDTH,WORLD_HEIGHT,WORLD_SIDE_SIZE,1),t=[],n=0;n<NUMBER_COLORS;n++)t.push(new THREE.MeshBasicMaterial({color:ROAD_COLORS[n],side:THREE.DoubleSide}));for(var a=e.faces.length/2,r=0;r<a;r++){var i=2*r;e.faces[i].materialIndex=(r+Math.floor(r/WORLD_SIDE_SIZE))%NUMBER_COLORS,e.faces[i+1].materialIndex=(r+Math.floor(r/WORLD_SIDE_SIZE))%NUMBER_COLORS}var E=new THREE.Mesh(e,t);E.rotateX(-Math.PI/2),E.position.y=0,o.add(E)}function t(){requestAnimationFrame(t),n.clear(),n.setViewport(0,0,WINDOW_WIDTH,WINDOW_HEIGHT),n.render(o,Player.getCamera()),a.clear(),a.setViewport(0,0,WINDOW_WIDTH/4,WINDOW_HEIGHT/4),a.render(o,r),Player.doMovementLoop(),r.position.z=Player.playerObject.position.z}var o=new THREE.Scene,n=new THREE.WebGLRenderer,a=new THREE.WebGLRenderer,r=new THREE.OrthographicCamera(-WORLD_HEIGHT/2,WORLD_HEIGHT/2,WORLD_HEIGHT/2,-WORLD_HEIGHT/2,TOP_CAMERA_DIST-50,TOP_CAMERA_DIST+50);return{init:function(){n.setSize(WINDOW_WIDTH,WINDOW_HEIGHT),n.setPixelRatio(window.devicePixelRatio),n.domElement.style.position="fixed",document.body.appendChild(n.domElement),n.autoClear=!1,a.setSize(WINDOW_WIDTH/4,WINDOW_HEIGHT/4),a.setPixelRatio(window.devicePixelRatio),a.domElement.style.position="fixed",a.domElement.style.top="5%",a.domElement.style.left="70%",a.domElement.style.zIndex="2",a.domElement.style.outline="white solid",document.body.appendChild(a.domElement),a.autoClear=!1,r.position.y=TOP_CAMERA_DIST,r.rotation.x=-90*Math.PI/180,e(),o.add(Player.playerObject),t()}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
