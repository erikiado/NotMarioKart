"use strict";var WORLD_SIDE_SIZE=7,WINDOW_HEIGHT=window.innerHeight,WINDOW_WIDTH=window.innerWidth,ROAD_COLORS=[16711680,16746496,16776960,65280,65535,255,16711935],NUMBER_COLORS=ROAD_COLORS.length,WORLD_HEIGHT=1e3,WORLD_WIDTH=100,CAR_SIZE_X=10,CAR_SIZE_Y=10,CAR_SIZE_Z=10,Player=function(){function e(e){e=e||event,E[e.which]="keydown"===e.type}var t=new THREE.PerspectiveCamera(75,WINDOW_WIDTH/WINDOW_HEIGHT,.1,1e3),n=function(){var e=(new THREE.TextureLoader).load("/assets/object-textures/player.jpg"),n=new THREE.BoxGeometry(CAR_SIZE_X,CAR_SIZE_Y,CAR_SIZE_Z),r=new THREE.MeshBasicMaterial({map:e}),o=new THREE.Mesh(n,r);return o.position.y=n.parameters.height/2,o.add(t),o}(),r={movement:{arrows:{up:38,down:40,left:37,right:39},wasd:{up:87,down:83,left:65,right:68}},reset:8},o=r.movement.arrows,a=.5,i=.03,E={};return document.addEventListener("keydown",e,!1),document.addEventListener("keyup",e,!1),{doMovementLoop:function(){E[o.up]&&n.translateZ(-a),E[o.left]&&n.rotateY(i),E[o.right]&&n.rotateY(-i),E[o.down]&&n.translateZ(a),E[r.reset]&&(n.rotation.y=0,n.position.set(0,n.position.y,0))},playerObject:n,camera:t}}(),NotMarioKart=function(){function e(){for(var e=new THREE.PlaneGeometry(WORLD_WIDTH,WORLD_HEIGHT,WORLD_SIDE_SIZE,1),t=[],r=0;r<NUMBER_COLORS;r++)t.push(new THREE.MeshBasicMaterial({color:ROAD_COLORS[r],side:THREE.DoubleSide}));for(var o=e.faces.length/2,a=0;a<o;a++){var i=2*a;e.faces[i].materialIndex=(a+Math.floor(a/WORLD_SIDE_SIZE))%NUMBER_COLORS,e.faces[i+1].materialIndex=(a+Math.floor(a/WORLD_SIDE_SIZE))%NUMBER_COLORS}var E=new THREE.Mesh(e,t);E.rotateX(-Math.PI/2),E.position.y=0,n.add(E)}function t(){requestAnimationFrame(t),r.clear(),r.setViewport(0,0,WINDOW_WIDTH,WINDOW_HEIGHT),r.render(n,Player.camera),r.setViewport(WINDOW_WIDTH-200,50,150,150),r.render(n,o),Player.doMovementLoop()}var n=new THREE.Scene,r=new THREE.WebGLRenderer,o=new THREE.PerspectiveCamera(75,1,.1,1e3);return{init:function(){r.setSize(WINDOW_WIDTH,WINDOW_HEIGHT),r.setPixelRatio(window.devicePixelRatio),r.domElement.style.position="relative",document.body.appendChild(r.domElement),r.autoClear=!1,o.position.y=500,o.rotation.x=-90*Math.PI/180,e(),n.add(Player.playerObject),t()}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
